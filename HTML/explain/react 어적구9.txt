에러 핸들링
try / catch 문법

//try를 실행하다가 error가 있다면 catch로 주도가 넘어감. error가 없다면 catch를 무시하고 try만 실행
try{
	코드 작성
}
catch(e){
	코드 작성
}

lamp-shopping-mall



서버 - API 서버

react	-> es6
node	-> Common js

모듈
1. es6 방식
1)내보내기
export function hello(){

}
function hello(){
}
export default hello;
import hello from './hello.js'
2. CommonJS 방식
1) 내보내기 (export)
function hello(){
}
module.exports = hello;
2) 불러오기 (import)
const hello = require('./hello.js')
hello();

http status codes
200 성공
300 redirection
400 client error
500 server error

res.send()는 send에 전해진 argument에 따라서 Content-type이 자동적으로 만들어진다. 이게 기본이다.
res.json()은 json이 아닌 것도 json 형식으로 바꾸어서 보내준다. 즉 content-type 헤더를 application/JSON으로 고정한다. 그런데 결국 res.json()도 마지막에 res.send()를 호출한다.
res.end()는 보내줄 아무 데이터도 없는데 response를 끝내고 싶을 때 사용한다.
ex) res.status(400).end();







npm install express
npm install cors

.gitignore
.node_module



