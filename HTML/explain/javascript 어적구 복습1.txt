자바스크립트 기본구문

1. 변수
let, var, const
let
: 변수 선언 가능
블럭 스코프. if문 안에서 선언 되면 그 외에서는 불려지지 않음
호이스팅 되지 않음. 위에서 아래로 읽어내릴 때 자기 차례에서 읽혀짐.
즉 변수를 선언한 것보다 위에서 부르면 에러뜸
var
: 선언만 호이스팅 됨(값은 X)
함수 스코프.
선언만 위로 끌어올려서 읽어버린단 말임.
다만 값이 호이스팅 되지 않기 때문에 값은 undefined로 할당됨.
const
: 선언과 동시에 할당. 한 번 할당한 값을 후에 바꿀 수 없음.
변하지 않을 데이터를 담아주는 그릇. 보통 구분짓기 위해 대문자로 적음.
블럭 스코프

2. 함수
함수선언문 : 함수를 바로 선언함
//재료1, 재료2를 매개변수로 받고 그 값을 빵이라는 변수로 return 한다. return 하는 순간 함수는 끝이 남.
function 빵만들기(재료1, 재료2){
	let 빵 = 재료1 + 재료2 + '빵';
	return 빵;
}

let 빵1 = 빵만들기('밀가루','옥수수');
let 빵2 = 빵만들기 ('찹쌀','팥');

함수 표현식 : 변수를 선언하고 거기에 함수를 할당함

let 빵만들기 = function(재료1, 재료2){
	let 빵 = 재료1 + 재료2 + '빵';
	return 빵;
}
빵만들기();

화살표 함수 : 함수 선언문은 불가
let  빵만들기 = 재료1 =>{
} 
1. function 대신 =>
2. 매개변수가 하나일 때만 ()괄호 생략가능
3. 실행문이 한 줄 일때는  {} 생략가능 그 한 줄이 리턴문일 때는 리턴 생략 가능

let origin = function(num1, num2){
	return num1 + num2
}
let short = (num1, num2) => num1 + num2


배열
let arr = [1,2,3,4,5,6,7];
배열길이 arr.length
배열의 마지막 인데스 arr.length - 1

push()/pop()/shift()/unshift()
indexOf()
includes()
slice()
splice()
map()
filter()
find()
some()
mdn 사이트 가면 메소드들 종류 설명이랑 같이 볼 수 있음


객체 
연관된 변수와 메소드를 하나로 묶어서 관리

객체리터럴
객체의 key값에는 문자타입만 온다. 얘가 알아서 문자타입으로 변환시킴
let key4 = 'key add';
let obj = {
	key1: value1,
	key2: value2,
	[key4] : value3 띄어쓰기 넣고 싶으면 아예 변수 하나 지정하고 그 변수를 불러와라. 변수 불러올 때는 대괄호로 감싸기
}

obj.key1
obj['key1']

obj.key3 = true; 할 순 있는데 안 좋은 방법 하지말자.
delete obj.key1 이것도 하지마라

.
['key1'] : string 타입으로 지정해줌( 따옴표 넣으란 소리)


































