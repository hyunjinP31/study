구조분해 할당, 프로미스, 프로토타입 상속

구조분해 할당
배열과 객체의 값을 분해해서 변수에 각각 할당해줌
배열의 값을 복사한 후 변수에 할당해줌으로 배열이 수정 또는 파괴되지 않습니다.
let fruits = ["사과","수박","오렌지","딸기"];
let fruit1 = fruits[0];
let fruit2 = fruits[1];
let fruit3 = fruits[2];
let fruit4 = fruits[3];
1) 기본구문 let [변수명, 변수명,...] = 배열변수
let [fruit1, fruit2, fruit3, fruit4] = fruirs;

2) 쉼표를 사용하여 요소 무시하기
let fruits = ["사과","수박","오렌지","딸기"];
let [fruit1, ,fruit2] = fruits; //사과, 오렌지만 받아옴

3)변수의 값을 교환
변수에 할당된 값을 교환할 때도 구조분해 할당을 사용할 수 있음.
구문 --> [변수1, 변수2] = [변수2, 변수1];
ex>
let name = "green";
let admin = "admin";
admin 에는 "green", name에는 "admin" 으로 바꿔주고 싶음
[name, admin] = [admin, name];

4) 나머지 매개변수를 활용한 나머지 요소 배열로 가져오기
구문> let [변수명1, 변수명2, ...변수명3] = 배열변수
ex> let fruits = ["사과","수박","오렌지","딸기"];
let [fruit1, fruit2, ...fruit3] = fruits; //fruit1에는 사과, fruit2 에는 수박, fruit3에는 나머지 모든 값들이 배열로 담김


객체 구조분해 할당
구조분해 할당으로 객체도 분해할 수 있음.
구문 > let {변수명1, 변수명2} = { 키1 : ...., 키2: ....} //변수명1과 키1의 이름이 같아야 함
let options = {
	title: "Menu",
	width: 100,
	height: 200,
}
let {title, width, height} = options; //순서는 상관없음, 변수명과 같은 이름을 가진 키에 할당 됨.

1)객체의 키와 다른 변수명으로 할당
객체 키명 : 변수명
let options = {
	title: "Menu",
	width: 100,
	height: 200,
}
let {title, width : W, height} = options; //width라는 키가 가진 값이 W라는 변수명을 가진 변수에 할당
let {title} = options; //title만 받아옴

2) 나머지 패턴 '...'
let options = {
	title: "Menu",
	width: 100,
	height: 200,
}
let { title, ...rest } = options; //title은 title이라는 변수에 저장, 나머지 키들은 rest라는 객체에 다시 저장




프로토타입
[[prototype]]
자바스크립트 객체는 [[prototype]]이라는 숨김 프로퍼티를 갖습니다.
이 숨김 프로퍼티가 다른 객체에 대한 참조가 되는데
다른 객체를 참조하는 경우 참조 타입을 프로토 타입이라 부릅니다.



























