정규표현식
문자열에서 특정 문자 조합을 찾기 위한 패턴

/패턴/gm(gloval multy)
https://regexr.com/5mhou 정규 표현식 연습 사이트
프로그래머스 - 코딩 테스트 사이트

1. 그룹과 범위
|	또는
() 	그룹
[]  	문자셋
[^] 	부정문자셋-[] 안의 문자가 아닐 때

2. 수량
?	없거나 있거나
*	없거나 있거나 많거나
+	하나 또는 많이
{n}	n번 반복
{min,}	최소수량
{min, max}	최소, 그리고 최대

3. 텍스트
\	특수문자가 아닌 문자
.	어떤 글자
\d	숫자
\D	숫자가 아닌 것
\w	문자
\W	문자가 아닌 것
\s	공백
\S	공백이 아닌 것

4. 범위
^	문장의 시작
$	문장의 끝
\b	단어 경계
\B	단어 경계가 아님



문자열.replace(정규식, 대체문자)
문자열.match(정규식)		array반환
문자열.search(정규식)		index반환
정규식.test(문자열)			boolean반환

/^문자/    문장이 해당 문자로 시작하는 것을 찾음
/문자$/	 문장이 해당 문자로 끝나는 것을 찾음 


새로운 데이터 타입
기본형
Number
String
null
undefinde
boolean
Symbol()
객체의 프로퍼티 키를 고유하게 설정함으로써
프로퍼티 키의 충돌을 방지하기 위해 사용
1) 생성법 - Symbol함수를 호출함으로써 생성
ex> let sym1 = Symbol('설명문')
let obj = {
	name: "green",
	age: 30,
}
2)객체의 키로 사용
let obj = {name:"green", age: 20,}
let id = Symbol('id');
obj[id] = 123
3)객체의 숨김 프로퍼티
Object.keys(obj) 객체의 프로퍼티의 키를 배열로 반환
Object.values(obj) 객체의 프로퍼티의 값을 배열로 반환
Object.entries(obj) 객체의 프로퍼티를 배열로 빈환



참조형
object / array / function
set / map

객체 = 키가 있는 컬렉션을 저장
배열 = 순서(인덱스)가 있는 컬렉션을 저장

set - 중복을 허용하지 않는 값을 모아놓은 컬렉션
객체지만 키가 없고 인덱스도 없음 (index값으로 찾으려 하면 undefined 뜸)
new Set (이터러블)
셋을 생성. 이터러블 객체를 전달받으면 그 안에 값을 복사해 셋에 넣어줍니다.
set.add(value) 값을 추가
set.delete(value) 값을 제거
set.has(value) set내에 value가 존재하면 true 아니면 false 반환
set.size set에 몇 개의 값이 있는지 반환
set.clear() set 비움(값이 다 비워지고 껍데기만 남음)


Date 객체
날짜를 저장할 수 있고, 날짜와 관련된 메서드를 제공해주는 내장객체

1) 객체 생성하기
new Date()를 호출하면 새로운 Date객체가 만들어 집니다.
new Date() 현재날짜와 시간을 가진 객체
new Date(년도, 월, 일, 시, 분, 초, 밀리초) --> 년도와 월은 필수 입력값, 월은 0~11 입력(0이 1월)
new Date(밀리초)
기준 1970년 1월 1일 0시 0분 0초
데이터 객체를 생성할 때 파라미터를 1개만 지정하면 이 값은 밀리초로 지정됨
new Date(1000) //1970년 1월 1일 0시 0분 1초

2)날짜 구성요소 받기
getFullYear()	년도(네 자릿수) 반환
getMonth() 	월을 반환 (0~11)
getDay() 		요일 반환(0~6)
getDate() 	날짜를 반환
getHours() 	시간 반환
getMinutes() 	분을 반환
getSeconds() 	초를 반환
getMilliseconds 	밀리초 반환

3) 날짜 구성요소 설정
setDate(현재Date+10)
































