관계형 데이터 베이스
RDBMS
종류 : 오라클, MySQL, MariaDB, Ms-Access
특징 : 데이터 베이스를 테이블 형태로 표현

비관계형 데이터 베이스
거대한 양의 데이터와 비정형 데이터가 포함된 데이터를 저장하고 사용하는 기술
종류 : MongoDB, HBase, Cassndra

1) 데이터 정의 언어 (DDL : Data Definition Language)
DB구조, 데이터 형식, 접근 방식 DB를 구축하거나 수정할 목적으로 사용하는 언어
- CREATE : 생성
- ALTER : 변경
- DROP : 삭제
1. 데이터 베이스 생성
create database 데이터베이스이름
ex> create database test
2. 테이블 생성
create table 테이블명 (
	컬럼명 데이터타입 [옵션],
	컬럼명 데이터타입 [옵션],
	...
)
num name email tel addr
create table bbs(
	num int primary key auto_increment,
	name varchar(20) not null,
	email varchar(50) not null,
	tel varchar(13) not null,
	addr varchar(50)
);

* 데이터 타입
1. 가변문자열 : varchar(n)
2. 고정문자열 : char(n)
3. 숫자 : int
4. 날짜 : date
5. 텍스트 : text
6. 열거형 : enum

* 옵션
1. primary key : 기본키 (중복불가, not null)
2. not null : 필수 입력
3. null : 널값 허용
4. unique : 유일값(중복불가)
5. auto_increment : 자동 증가값

- DROP 데이터 베이스 삭제, 테이블 삭제
1) 데이터 베이스 삭제
DROP DATABASE 데이터 베이스명
2) 테이블 삭제
DROP TABLE 테이블 명

-ALTER 테이블 컬럼 수정
1) 테이블에 컬럼 추가
쿼리문 > ALTER table 테이블명 ADD COLUMN 컬럼명 컬럼 타입
ex> alter table bbs add column userId varchar(20)
2) 테이블의 컬럼 타입 변경하기
쿼리문 > ALTER table 테이블명 MODIFY COLUMN 컬럼명 컬럼타입
ex> alter table bbs modify column userId int;
3) 테이블의 컬럼 삭제하기
쿼리문 > ALTER table 테이블명 DROP COLUMN 컬럼명
alter table bbs drop column userId;
4)테이블의 컬럼 이름 변경하기
쿼리문 > ALTER table 테이블명 CHANGE COLUMN 컬럼명 새로운 컬럼명 컬럼타입
ex> alter table bbs change column addr address varchar(60);

2) 데이터 조작 언어 DML
1. 데이터 생성 insert
insert into 테이블명 (column1, column2, ...)
values(value1, value2, ...)
ex> insert into bbs(name, email, tel, addr)
values('이순신', 'test@test.com', '010-1234-1234', '울산시 남구 삼산동');
insert into bbs(name, email, tel, addr)
values('홍길동', 'test@test.com', '010-1111-1111', '울산시 남구 달동');
insert into bbs(name, email, tel, addr)
values('김유신', 'abc@abc.com', '010-2222-2222', '울산시 동구 서부동');

2. 데이터 조회 select
쿼리문 > select * from 테이블 명
es> select * from bbs;
ex> select name from bbs;

select 컬럼명 
from 테이블명
where 컬럼명 조건절
order by 컬럼명 asc(오름차순) | desc (내림차순) 

조건절
1. 비교문
> : 크다
>= : 크거나 같다
<= : 작거나 같다
< : 작다
= : 같다
<> : 같지 않다

2. 논리
and
or
not

3. between A and B

4. 패턴
like %
ex> like '김%' //김으로 시작하는 데이터 검색	like '%광역시' // 광역시로 끝나는 데이터 검색

5. is null, is not null

정렬
1. asc 오름차순
order by 컬럼명 asc
ex> order by pname asc 
--> pname컬럼명을 기준으로 오름차순 정렬
2. desc 내림차순
order by 컬럼명 desc
ex> order by pname desc
--> pname 컬럼명을 기준으로 내림차순 정렬

문제 01) 이름이 김씨인 사람의 모든 컬럼을 검색
select * from employee
where pname like '김%';

문제 02) 퇴사한 사람의 이름과 퇴사일을 검색
select pname, firedate from employee
where firedate is not null;

문제 03) 보너스를 받지 않는 사람의 이름을 검색
select pname from employee
where bonus is null;

문제 04) job이 사원인 사람의 사원번호, 이름, 직급순으로 출력(이름은 오름차순 정렬)
select perno, job, pname from employee
where job = '사원'
order by pname asc;


















