변수
let num: number = 30
let str: string = "string"

let numbers: number[]
let numbers2: Array<number>

function myFunc(a: number, b: string) :void {
}

*튜플 Tuple
배열과 매우 유사함
정해진 타입의 고정된 길이배열을 나타냄

let tuple: [string, number]
tuple = ["a", 1]
tuple = ["a",1,2] //Error

let userid : number = 2134
let username: string = "green"
let isValid:boolean = true

let user: readonly [number, string, boolean] = [1234, "green", true]

* 열거형 Enum
숫자 혹은 문자열 값 집합에 이름을 부여할 수 있는 타입

enum Week{
	Sun,
	Mon,
	Tue,
	Wed,
	Thu,
	Fri,
	Set
}

타입 추론
명시적으로 타입 선언이 되어 있지 않은 경우, 타입스크립트는 타입을 추론해서 제공함.
	1) 초기화된 변수(변수를 선언한 뒤 바로 할당하는 경우) let num = 20 // number type
	2) 기본값이 설정된 매개 변수 // function add (a:number, b=2){ //b는 number type으로 타입추론됨}
	3) 반환 값이 있는 함수(return이 명시된 함수)

타입 단언
타입 추론을 통해 판단할 수 있는 타입의 범주를 넘는 경우 더이상 추론하지 않도록 지시하는 것을 타입 단언이라함


interface
타입스크립트 여러 객체를 정의하는 일종의 규칙, 구조

interface IUser {
	readonly name: string,
	age: number
	isAdult? : boolean
}
let user1: IUser = {
	name: 'Neo',
	age: 20,
	isAdult: true
}
let user2: IUser = {
	name: 'Neo',
	age: 16,
}

readonly : 읽기 전용. 재할당 안 됨
변수? : 선택사함

interface IName {
	(매개변수: 매개변수타입): 리턴 타입지정
}
interface IGetUser {
	(name: string): IUser
}

함수 오버로드
이름은 같지만 매개변수 타입과 반환 타입이 다른 여러 함수를 가질 수 있는 것
함수 어버로드를 통해 다양한 구조의 함수를 생성하고 관리할 수 있습니다

keyof
인덱싱 가능 타입에서 keyof를 사용하면 속성이름을 타입으로 사용할 수 있음
인덱싱 가능 타입의 속성 이름들이 유니온 타입으로 적용됨


Generic
재사용을 목적으로 함수나 클래스의 선언 시점이 아닌, 사용 시점에 타입을 선언할 수 있음
타입을 선언할 수 있음
다입을 인수로 받아서 사용
function toArray<T>(a:T, bT): T[]{
	return [am b]
}
toArray<number>(1,2)
toArray<string>('a','b')
toArray(1,2) //타입추론을 사용해 typescript가 알아서 타입을 결론짓게끔 생략



제약조건
T extends U

조건부 타입
타입구현 영역에서 사용하는 extends 삼함 연산자를 사용할 수 있음
이를 조건부 타입이라 한다.
구문> Textends U ? X : Y


리액트 프로젝트를 만들때 타입스크립트 명시
npx create-react-app ts-react-tutorial --template typescript











Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.
    at MainSlide (http://localhost:3000/static/js/bundle.js:418:90)
    at MainIndex
    at div
    at App

















































